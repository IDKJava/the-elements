apply plugin: 'com.android.application'

task buildProto(type: Exec) {
//    println 'setting ANDROID_NDK_HOME='
//    println android.ndkDirectory
//    environment ANDROID_NDK_HOME:android.ndkDirectory
    commandLine './buildscript.sh'
    println './buildscript.sh complete.'
}

afterEvaluate {
    assembleDebug.dependsOn(buildProto)
    assembleRelease.dependsOn(buildProto)
}

task keystoreInfo {
    doLast {
        def console = System.console()
        if (console == null)
            throw new IllegalStateException('no console available, use --no-daemon flag')

        def pass = new String(console.readPassword('\n\nEnter keystore password: '))
        android.signingConfigs.release.storePassword = pass
        android.signingConfigs.release.keyPassword = pass
    }
}

tasks.whenTaskAdded { task ->
    if (task.name == 'validateReleaseSigning')
        task.dependsOn keystoreInfo
}

dependencies {
    implementation fileTree(include: '*.jar', dir: 'libs')
    implementation project(':android-color-picker:AmbilWarna')
    implementation project(':Android-WVersionManager:library')
    implementation project(':android-ColorPickerPreference')
}

android {
    buildToolsVersion = '29.0.3'
    defaultConfig {
        minSdkVersion 10
        compileSdkVersion 29
        targetSdkVersion 29
    }

    externalNativeBuild {
        ndkBuild {
            path 'jni/Android.mk'
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }

        // Move the tests to tests/java, tests/res, etc...
        androidTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    signingConfigs {
        release {
            def envKeystore = System.getenv("IDKJAVA_KEYSTORE")
            if (envKeystore) {
                storeFile file(System.getenv("IDKJAVA_KEYSTORE"))
            }
            storePassword ''
            def envKeyalias = System.getenv("IDKJAVA_KEYALIAS")
            if (envKeyalias) {
                keyAlias System.getenv("IDKJAVA_KEYALIAS")
            }
            else {
                keyAlias ''
            }
            keyPassword ''
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }
}
